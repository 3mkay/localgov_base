{#
/**
* @file
* LocalGovDrupal theme implementation to display a single page.
*
* The doctype, html, head and body tags are not in this template. Instead they
* can be found in the html.html.twig template in this directory.
*
* Available variables:
*
* General utility variables:
* - base_path: The base URL path of the Drupal installation. Will usually be
*   "/" unless you have installed Drupal in a sub-directory.
* - is_front: A flag indicating if the current page is the front page.
* - logged_in: A flag indicating if the user is registered and signed in.
* - is_admin: A flag indicating if the user has permission to access
*   administration pages.
* - has_sidebar_first: Can we expect any content in the first sidebar?
* - has_sidebar_second: See above.
*
* Site identity:
* - front_page: The URL of the front page. Use this instead of base_path when
*   linking to the front page. This includes the language domain or prefix.
*
* Page content (in order of occurrence in the default page.html.twig):
* - messages: Status and error messages. Should be displayed prominently.
* - node: Fully loaded node, if there is an automatically-loaded node
*   associated with the page and the node ID is the second argument in the
*   page's path (e.g. node/12345 and node/12345/revisions, but not
*   comment/reply/12345).
*
* Regions:
* - page.header
* - page.search
* - page.mobile_search
* - page.primary_menu
* - page.secondary_menu
* - page.banner
* - page.breadcrumb
* - page.messages
* - page.content_top
* - page.content
* - page.content_bottom
* - page.sidebar_first
* - page.sidebar_second
* - page.footer_first
* - page.footer_second
* - page.disabled
* @see template_preprocess_page()
* @see html.html.twig
*
* @ingroup themeable
*/
#}

{# Set up some variables to check that regions have content #}
{% set has_tabs = page.tabs|render|striptags|trim is not empty %}
{#
  If the only thing in the header is the logo in the branding block, the region renders
  as empty while waiting on the logo, which means the has_header check returns as
  false. Let's do a less severe check; it's probably fair to presume we will always
  have a header.
#}
{% set has_header = page.header %}
{% set has_search = page.search|render|striptags|trim is not empty %}
{% set has_mobile_search = page.mobile_search|render|striptags|trim is not empty %}
{% set has_primary_menu = page.primary_menu|render|striptags|trim is not empty %}
{% set has_secondary_menu = page.secondary_menu|render|striptags|trim is not empty %}
{# 
  Alerts in banner are getting rendered a little too late, so we can't do a full
  search, or else the banner `if` statement will stop the region from displaying.
#}
{% set has_banner = page.banner %}
{% set has_breadcrumb = page.breadcrumb|render|striptags|trim is not empty %}
{% set has_messages = page.messages|render|striptags|trim is not empty %}
{% set has_content_top = page.content_top|render|striptags|trim is not empty %}
{% set has_sidebar_first = page.sidebar_first|render|striptags|trim is not empty %}
{% set has_sidebar_second = page.sidebar_second|render|striptags|trim is not empty %}
{% set has_sidebars = has_sidebar_first or has_sidebar_second %}
{% set has_content_bottom = page.content_bottom|render|striptags|trim is not empty %}
{% set has_footer_first = page.footer_first|render|striptags|trim is not empty %}
{% set has_footer_second = page.footer_second|render|striptags|trim is not empty %}
{% set has_footer_third = page.footer_third|render|striptags|trim is not empty %}
{% set has_footer = page.footer|render|striptags|trim is not empty %}
{% set has_lower_footer_first = page.lower_footer_first|render|striptags|trim is not empty %}
{% set has_lower_footer_second = page.lower_footer_second|render|striptags|trim is not empty %}
{% set has_lower_footer_third = page.lower_footer_third|render|striptags|trim is not empty %}

{#
  We'll use this `footer_regions` array later to check if there is content in 
  at least one of them before we start rendering the footer element. It will
  probably always return true, but no harm in checking.
#}
{% 
  set footer_regions = [
    'has_footer_first',
    'has_footer_second',
    'has_footer_third',
    'footer',
    'has_lower_footer_first',
    'has_lower_footer_second',
    'has_lower_footer_third',
  ]
%}

{# 
  We create a dedicated tabs region and place it at the top of the page.
  This is to make sure tabs don't interfere with any other content, but
  especially to make sure other content doesn't interfere with tabs (which)
  can often happen if `position: absolute` further down the page, causing
  content to cover tabs and other issues.

  Taking this approach also means we can have consistent styling for the
  tabs region on all localgov_drupal websites. Yay!
#}
{% if has_tabs %}
  {{ page.tabs }}
{% endif %}

{% if has_header %}
  {{ page.header }}
{% endif %}

{% if has_search %}
  {{ page.search }}
{% endif %}

{% if has_mobile_search %}
  {{ page.mobile_search }}
{% endif %}

{% if has_primary_menu %}
  {{ page.primary_menu }}
{% endif %}

{% if has_secondary_menu %}
  {{ page.secondary_menu }}
{% endif %}

{% if has_banner %}
  {{ page.banner }}
{% endif %}

{% if has_breadcrumb %}
  {{ page.breadcrumb }}
{% endif %}

{% if has_messages %}
  {{ page.messages }}
{% endif %}

{% if has_content_top %}
  {{ page.content_top }}
{% endif %}

<div class="lgd-container">
  <main id="main-content"> {# The "skip to content" link jumps to here. #}
    <div class="lgd-row">

      {# Begins Sidebars #}
      {% if has_sidebars %}
        {% if has_sidebar_first and not has_sidebar_second %}
          <aside class="lgd-row__one-third">
            {{ page.sidebar_first }}
          </aside>
          <div class="lgd-row__two-thirds">
            {{ page.content }}
          </div>
        {% endif %}
      
        {% if has_sidebar_second and not has_sidebar_first %}
          <div class="lgd-row__two-thirds">
            {{ page.content }}
          </div>
          <aside class="lgd-row__one-third">
            {{ page.sidebar_second }}
          </aside>
        {% endif %}

        {% if has_sidebar_first and has_sidebar_second %}
          <aside class="lgd-row__one-quarter">
            {{ page.sidebar_first }}
          </aside>
          <div class="lgd-row__one-half">
            {{ page.content }}
          </div>
          <aside class="lgd-row__one-quarter">
            {{ page.sidebar_second }}
          </aside>
        {% endif %}

        {% else %}
          {# If there are no sidebars, the content region take up 100% of the space #}
          <div class="lgd-row__full">
          {{ page.content }}
          </div>
      {% endif %} {# Ends Sidebars #}

    </div>
  </main>
</div>

{% if has_content_bottom %}
  {{ page.content_bottom }}
{% endif %}

{% if footer_regions %}
  {# 
    Wrap all of the "footers" in a `footer` element for semantics.
    This should ensure that all the contact/housekeeping links/etc 
    are within the footer element to assist screenreaders and other
    automated tools.
  #}
  <footer class="footer">
    <div class="lgd-container">
      <div class="lgd-row">
{% endif %}

  {% if has_footer_first %}
    <div class="lgd-row__one-third">
      {{ page.footer_first }}
    </div>
  {% endif %}

  {% if has_footer_second %}
    <div class="lgd-row__one-third">
      {{ page.footer_second }}
    </div>
  {% endif %}

  {% if has_footer_third %}
    <div class="lgd-row__one-third">
      {{ page.footer_third }}
    </div>
  {% endif %}

  {% if has_footer %}
    <div class="lgd-row__full">
      {{ page.footer }}
    </div>
  {% endif %}

  {% if has_lower_footer_first %}
    <div class="lgd-row__one-third">
      {{ page.lower_footer_first }}
    </div>
  {% endif %}

  {% if has_lower_footer_second %}
    <div class="lgd-row__one-third">
      {{ page.lower_footer_second }}
    </div>
  {% endif %}

  {% if has_lower_footer_third %}
    <div class="lgd-row__one-third">
      {{ page.lower_footer_third }}
    </div>
  {% endif %}

{% if footer_regions %}
      </div>
    </div>
  </footer>
{% endif %}